#!/usr/bin/env bash

CREATE_SESSION_VALUE='Create New Session'
SESSION_LIST=`tmux list-sessions`
SESSION_LIST+="\n$CREATE_SESSION_VALUE"

switch_to() {
    if [[ -z $TMUX ]]; then
        tmux attach-session -t $1
    else
        tmux switch-client -t $1
    fi
}

has_session() {
    echo -e $SESSION_LIST | grep -q "^$1:"
}

hydrate() {
    if [ -f $2/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $2/.tmux-sessionizer" c-M
    elif [ -f $HOME/.tmux-sessionizer ]; then
        tmux send-keys -t $1 "source $HOME/.tmux-sessionizer" c-M
    fi
}

if [[ $# -eq 1 ]]; then
    selected=$1
else
    # Checks if you would like to switch to an existing session
    # This is nice if you work requires switching accross multiple tmux sessions
    selected_name=$(
        echo -e "$SESSION_LIST" | 
        fzf --reverse | 
        sed '/^$/d' | 
        cut -d':' -f1
    )

    if [[ $selected_name != $CREATE_SESSION_VALUE ]]; then 
        switch_to $selected_name
        exit 0
    fi
    # If someone wants to make this extensible, i'll accept
    # PR
    selected=$(find ~/ ~/personal ~/personal/dev/env/.config -mindepth 1 -maxdepth 1 -type d | fzf)
fi


if [[ -z $selected ]]; then
    exit 0
fi

selected_name=$(basename "$selected" | tr . _)
tmux_running=$(pgrep tmux)

if [[ -z $TMUX ]] && [[ -z $tmux_running ]]; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
fi

if ! has_session $selected_name; then
    tmux new-session -ds $selected_name -c $selected
    hydrate $selected_name $selected
fi

switch_to $selected_name
